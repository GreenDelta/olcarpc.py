# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import olcarpc.olca_pb2 as olca__pb2
import olcarpc.services_pb2 as services__pb2


class DataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Delete = channel.unary_unary(
                '/protolca.services.DataService/Delete',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.Status.FromString,
                )
        self.GetActors = channel.unary_stream(
                '/protolca.services.DataService/GetActors',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Actor.FromString,
                )
        self.GetActor = channel.unary_unary(
                '/protolca.services.DataService/GetActor',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ActorStatus.FromString,
                )
        self.PutActor = channel.unary_unary(
                '/protolca.services.DataService/PutActor',
                request_serializer=olca__pb2.Actor.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetCategories = channel.unary_stream(
                '/protolca.services.DataService/GetCategories',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Category.FromString,
                )
        self.GetCategory = channel.unary_unary(
                '/protolca.services.DataService/GetCategory',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.CategoryStatus.FromString,
                )
        self.PutCategory = channel.unary_unary(
                '/protolca.services.DataService/PutCategory',
                request_serializer=olca__pb2.Category.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetCurrencies = channel.unary_stream(
                '/protolca.services.DataService/GetCurrencies',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Currency.FromString,
                )
        self.GetCurrency = channel.unary_unary(
                '/protolca.services.DataService/GetCurrency',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.CurrencyStatus.FromString,
                )
        self.PutCurrency = channel.unary_unary(
                '/protolca.services.DataService/PutCurrency',
                request_serializer=olca__pb2.Currency.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetDQSystems = channel.unary_stream(
                '/protolca.services.DataService/GetDQSystems',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.DQSystem.FromString,
                )
        self.GetDQSystem = channel.unary_unary(
                '/protolca.services.DataService/GetDQSystem',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.DQSystemStatus.FromString,
                )
        self.PutDQSystem = channel.unary_unary(
                '/protolca.services.DataService/PutDQSystem',
                request_serializer=olca__pb2.DQSystem.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetFlows = channel.unary_stream(
                '/protolca.services.DataService/GetFlows',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Flow.FromString,
                )
        self.GetFlow = channel.unary_unary(
                '/protolca.services.DataService/GetFlow',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.FlowStatus.FromString,
                )
        self.PutFlow = channel.unary_unary(
                '/protolca.services.DataService/PutFlow',
                request_serializer=olca__pb2.Flow.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetFlowProperties = channel.unary_stream(
                '/protolca.services.DataService/GetFlowProperties',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.FlowProperty.FromString,
                )
        self.GetFlowProperty = channel.unary_unary(
                '/protolca.services.DataService/GetFlowProperty',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.FlowPropertyStatus.FromString,
                )
        self.PutFlowProperty = channel.unary_unary(
                '/protolca.services.DataService/PutFlowProperty',
                request_serializer=olca__pb2.FlowProperty.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetImpactCategories = channel.unary_stream(
                '/protolca.services.DataService/GetImpactCategories',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.ImpactCategory.FromString,
                )
        self.GetImpactCategory = channel.unary_unary(
                '/protolca.services.DataService/GetImpactCategory',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ImpactCategoryStatus.FromString,
                )
        self.PutImpactCategory = channel.unary_unary(
                '/protolca.services.DataService/PutImpactCategory',
                request_serializer=olca__pb2.ImpactCategory.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetImpactMethods = channel.unary_stream(
                '/protolca.services.DataService/GetImpactMethods',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.ImpactMethod.FromString,
                )
        self.GetImpactMethod = channel.unary_unary(
                '/protolca.services.DataService/GetImpactMethod',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ImpactMethodStatus.FromString,
                )
        self.PutImpactMethod = channel.unary_unary(
                '/protolca.services.DataService/PutImpactMethod',
                request_serializer=olca__pb2.ImpactMethod.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetLocations = channel.unary_stream(
                '/protolca.services.DataService/GetLocations',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Location.FromString,
                )
        self.GetLocation = channel.unary_unary(
                '/protolca.services.DataService/GetLocation',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.LocationStatus.FromString,
                )
        self.PutLocation = channel.unary_unary(
                '/protolca.services.DataService/PutLocation',
                request_serializer=olca__pb2.Location.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetParameters = channel.unary_stream(
                '/protolca.services.DataService/GetParameters',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Parameter.FromString,
                )
        self.GetParameter = channel.unary_unary(
                '/protolca.services.DataService/GetParameter',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ParameterStatus.FromString,
                )
        self.PutParameter = channel.unary_unary(
                '/protolca.services.DataService/PutParameter',
                request_serializer=olca__pb2.Parameter.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetProcesses = channel.unary_stream(
                '/protolca.services.DataService/GetProcesses',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Process.FromString,
                )
        self.GetProcess = channel.unary_unary(
                '/protolca.services.DataService/GetProcess',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ProcessStatus.FromString,
                )
        self.PutProcess = channel.unary_unary(
                '/protolca.services.DataService/PutProcess',
                request_serializer=olca__pb2.Process.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetProductSystems = channel.unary_stream(
                '/protolca.services.DataService/GetProductSystems',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.ProductSystem.FromString,
                )
        self.GetProductSystem = channel.unary_unary(
                '/protolca.services.DataService/GetProductSystem',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ProductSystemStatus.FromString,
                )
        self.PutProductSystem = channel.unary_unary(
                '/protolca.services.DataService/PutProductSystem',
                request_serializer=olca__pb2.ProductSystem.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetProjects = channel.unary_stream(
                '/protolca.services.DataService/GetProjects',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Project.FromString,
                )
        self.GetProject = channel.unary_unary(
                '/protolca.services.DataService/GetProject',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.ProjectStatus.FromString,
                )
        self.PutProject = channel.unary_unary(
                '/protolca.services.DataService/PutProject',
                request_serializer=olca__pb2.Project.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetSocialIndicators = channel.unary_stream(
                '/protolca.services.DataService/GetSocialIndicators',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.SocialIndicator.FromString,
                )
        self.GetSocialIndicator = channel.unary_unary(
                '/protolca.services.DataService/GetSocialIndicator',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.SocialIndicatorStatus.FromString,
                )
        self.PutSocialIndicator = channel.unary_unary(
                '/protolca.services.DataService/PutSocialIndicator',
                request_serializer=olca__pb2.SocialIndicator.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetSources = channel.unary_stream(
                '/protolca.services.DataService/GetSources',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.Source.FromString,
                )
        self.GetSource = channel.unary_unary(
                '/protolca.services.DataService/GetSource',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.SourceStatus.FromString,
                )
        self.PutSource = channel.unary_unary(
                '/protolca.services.DataService/PutSource',
                request_serializer=olca__pb2.Source.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )
        self.GetUnitGroups = channel.unary_stream(
                '/protolca.services.DataService/GetUnitGroups',
                request_serializer=services__pb2.Empty.SerializeToString,
                response_deserializer=olca__pb2.UnitGroup.FromString,
                )
        self.GetUnitGroup = channel.unary_unary(
                '/protolca.services.DataService/GetUnitGroup',
                request_serializer=olca__pb2.Ref.SerializeToString,
                response_deserializer=services__pb2.UnitGroupStatus.FromString,
                )
        self.PutUnitGroup = channel.unary_unary(
                '/protolca.services.DataService/PutUnitGroup',
                request_serializer=olca__pb2.UnitGroup.SerializeToString,
                response_deserializer=services__pb2.RefStatus.FromString,
                )


class DataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Delete(self, request, context):
        """Deletes the object with the `id` and `type` of the given descriptor from
        the database. Note that the type is a string with the name of the
        corresponding model class, e.g. `Process` or `Flow`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActors(self, request, context):
        """methods for Actor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutActor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategories(self, request, context):
        """methods for Category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrencies(self, request, context):
        """methods for Currency
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrency(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutCurrency(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDQSystems(self, request, context):
        """methods for DQSystem
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDQSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutDQSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlows(self, request, context):
        """methods for Flow
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutFlow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlowProperties(self, request, context):
        """methods for FlowProperty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlowProperty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutFlowProperty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImpactCategories(self, request, context):
        """methods for ImpactCategory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImpactCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutImpactCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImpactMethods(self, request, context):
        """methods for ImpactMethod
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImpactMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutImpactMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocations(self, request, context):
        """methods for Location
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameters(self, request, context):
        """methods for Parameter
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutParameter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProcesses(self, request, context):
        """methods for Process
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductSystems(self, request, context):
        """methods for ProductSystem
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutProductSystem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjects(self, request, context):
        """methods for Project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSocialIndicators(self, request, context):
        """methods for SocialIndicator
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSocialIndicator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutSocialIndicator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSources(self, request, context):
        """methods for Source
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnitGroups(self, request, context):
        """methods for UnitGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnitGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutUnitGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.Status.SerializeToString,
            ),
            'GetActors': grpc.unary_stream_rpc_method_handler(
                    servicer.GetActors,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Actor.SerializeToString,
            ),
            'GetActor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActor,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ActorStatus.SerializeToString,
            ),
            'PutActor': grpc.unary_unary_rpc_method_handler(
                    servicer.PutActor,
                    request_deserializer=olca__pb2.Actor.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetCategories': grpc.unary_stream_rpc_method_handler(
                    servicer.GetCategories,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Category.SerializeToString,
            ),
            'GetCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategory,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.CategoryStatus.SerializeToString,
            ),
            'PutCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.PutCategory,
                    request_deserializer=olca__pb2.Category.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetCurrencies': grpc.unary_stream_rpc_method_handler(
                    servicer.GetCurrencies,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Currency.SerializeToString,
            ),
            'GetCurrency': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrency,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.CurrencyStatus.SerializeToString,
            ),
            'PutCurrency': grpc.unary_unary_rpc_method_handler(
                    servicer.PutCurrency,
                    request_deserializer=olca__pb2.Currency.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetDQSystems': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDQSystems,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.DQSystem.SerializeToString,
            ),
            'GetDQSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDQSystem,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.DQSystemStatus.SerializeToString,
            ),
            'PutDQSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.PutDQSystem,
                    request_deserializer=olca__pb2.DQSystem.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetFlows': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFlows,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Flow.SerializeToString,
            ),
            'GetFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlow,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.FlowStatus.SerializeToString,
            ),
            'PutFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.PutFlow,
                    request_deserializer=olca__pb2.Flow.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetFlowProperties': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFlowProperties,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.FlowProperty.SerializeToString,
            ),
            'GetFlowProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlowProperty,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.FlowPropertyStatus.SerializeToString,
            ),
            'PutFlowProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.PutFlowProperty,
                    request_deserializer=olca__pb2.FlowProperty.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetImpactCategories': grpc.unary_stream_rpc_method_handler(
                    servicer.GetImpactCategories,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.ImpactCategory.SerializeToString,
            ),
            'GetImpactCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImpactCategory,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ImpactCategoryStatus.SerializeToString,
            ),
            'PutImpactCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.PutImpactCategory,
                    request_deserializer=olca__pb2.ImpactCategory.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetImpactMethods': grpc.unary_stream_rpc_method_handler(
                    servicer.GetImpactMethods,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.ImpactMethod.SerializeToString,
            ),
            'GetImpactMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImpactMethod,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ImpactMethodStatus.SerializeToString,
            ),
            'PutImpactMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.PutImpactMethod,
                    request_deserializer=olca__pb2.ImpactMethod.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetLocations': grpc.unary_stream_rpc_method_handler(
                    servicer.GetLocations,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Location.SerializeToString,
            ),
            'GetLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocation,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.LocationStatus.SerializeToString,
            ),
            'PutLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.PutLocation,
                    request_deserializer=olca__pb2.Location.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetParameters': grpc.unary_stream_rpc_method_handler(
                    servicer.GetParameters,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Parameter.SerializeToString,
            ),
            'GetParameter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParameter,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ParameterStatus.SerializeToString,
            ),
            'PutParameter': grpc.unary_unary_rpc_method_handler(
                    servicer.PutParameter,
                    request_deserializer=olca__pb2.Parameter.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetProcesses': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProcesses,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Process.SerializeToString,
            ),
            'GetProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProcess,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ProcessStatus.SerializeToString,
            ),
            'PutProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.PutProcess,
                    request_deserializer=olca__pb2.Process.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetProductSystems': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProductSystems,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.ProductSystem.SerializeToString,
            ),
            'GetProductSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductSystem,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ProductSystemStatus.SerializeToString,
            ),
            'PutProductSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.PutProductSystem,
                    request_deserializer=olca__pb2.ProductSystem.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetProjects': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProjects,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Project.SerializeToString,
            ),
            'GetProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProject,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.ProjectStatus.SerializeToString,
            ),
            'PutProject': grpc.unary_unary_rpc_method_handler(
                    servicer.PutProject,
                    request_deserializer=olca__pb2.Project.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetSocialIndicators': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSocialIndicators,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.SocialIndicator.SerializeToString,
            ),
            'GetSocialIndicator': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSocialIndicator,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.SocialIndicatorStatus.SerializeToString,
            ),
            'PutSocialIndicator': grpc.unary_unary_rpc_method_handler(
                    servicer.PutSocialIndicator,
                    request_deserializer=olca__pb2.SocialIndicator.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetSources': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSources,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.Source.SerializeToString,
            ),
            'GetSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSource,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.SourceStatus.SerializeToString,
            ),
            'PutSource': grpc.unary_unary_rpc_method_handler(
                    servicer.PutSource,
                    request_deserializer=olca__pb2.Source.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
            'GetUnitGroups': grpc.unary_stream_rpc_method_handler(
                    servicer.GetUnitGroups,
                    request_deserializer=services__pb2.Empty.FromString,
                    response_serializer=olca__pb2.UnitGroup.SerializeToString,
            ),
            'GetUnitGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnitGroup,
                    request_deserializer=olca__pb2.Ref.FromString,
                    response_serializer=services__pb2.UnitGroupStatus.SerializeToString,
            ),
            'PutUnitGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.PutUnitGroup,
                    request_deserializer=olca__pb2.UnitGroup.FromString,
                    response_serializer=services__pb2.RefStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protolca.services.DataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/Delete',
            olca__pb2.Ref.SerializeToString,
            services__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetActors',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Actor.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetActor',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ActorStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutActor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutActor',
            olca__pb2.Actor.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetCategories',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Category.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetCategory',
            olca__pb2.Ref.SerializeToString,
            services__pb2.CategoryStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutCategory',
            olca__pb2.Category.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetCurrencies',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Currency.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrency(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetCurrency',
            olca__pb2.Ref.SerializeToString,
            services__pb2.CurrencyStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutCurrency(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutCurrency',
            olca__pb2.Currency.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDQSystems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetDQSystems',
            services__pb2.Empty.SerializeToString,
            olca__pb2.DQSystem.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDQSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetDQSystem',
            olca__pb2.Ref.SerializeToString,
            services__pb2.DQSystemStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutDQSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutDQSystem',
            olca__pb2.DQSystem.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetFlows',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Flow.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetFlow',
            olca__pb2.Ref.SerializeToString,
            services__pb2.FlowStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutFlow',
            olca__pb2.Flow.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlowProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetFlowProperties',
            services__pb2.Empty.SerializeToString,
            olca__pb2.FlowProperty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlowProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetFlowProperty',
            olca__pb2.Ref.SerializeToString,
            services__pb2.FlowPropertyStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutFlowProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutFlowProperty',
            olca__pb2.FlowProperty.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImpactCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetImpactCategories',
            services__pb2.Empty.SerializeToString,
            olca__pb2.ImpactCategory.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImpactCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetImpactCategory',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ImpactCategoryStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutImpactCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutImpactCategory',
            olca__pb2.ImpactCategory.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImpactMethods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetImpactMethods',
            services__pb2.Empty.SerializeToString,
            olca__pb2.ImpactMethod.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImpactMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetImpactMethod',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ImpactMethodStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutImpactMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutImpactMethod',
            olca__pb2.ImpactMethod.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLocations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetLocations',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Location.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetLocation',
            olca__pb2.Ref.SerializeToString,
            services__pb2.LocationStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutLocation',
            olca__pb2.Location.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetParameters',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Parameter.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetParameter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetParameter',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ParameterStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutParameter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutParameter',
            olca__pb2.Parameter.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProcesses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetProcesses',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Process.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetProcess',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ProcessStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutProcess',
            olca__pb2.Process.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductSystems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetProductSystems',
            services__pb2.Empty.SerializeToString,
            olca__pb2.ProductSystem.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetProductSystem',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ProductSystemStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutProductSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutProductSystem',
            olca__pb2.ProductSystem.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetProjects',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Project.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetProject',
            olca__pb2.Ref.SerializeToString,
            services__pb2.ProjectStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutProject',
            olca__pb2.Project.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSocialIndicators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetSocialIndicators',
            services__pb2.Empty.SerializeToString,
            olca__pb2.SocialIndicator.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSocialIndicator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetSocialIndicator',
            olca__pb2.Ref.SerializeToString,
            services__pb2.SocialIndicatorStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutSocialIndicator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutSocialIndicator',
            olca__pb2.SocialIndicator.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetSources',
            services__pb2.Empty.SerializeToString,
            olca__pb2.Source.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetSource',
            olca__pb2.Ref.SerializeToString,
            services__pb2.SourceStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutSource',
            olca__pb2.Source.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnitGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/protolca.services.DataService/GetUnitGroups',
            services__pb2.Empty.SerializeToString,
            olca__pb2.UnitGroup.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnitGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/GetUnitGroup',
            olca__pb2.Ref.SerializeToString,
            services__pb2.UnitGroupStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutUnitGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protolca.services.DataService/PutUnitGroup',
            olca__pb2.UnitGroup.SerializeToString,
            services__pb2.RefStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
